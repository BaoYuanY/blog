<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>搭建博客</title>
    <url>/build-blog/</url>
    <content><![CDATA[<p>11111</p>
]]></content>
      <categories>
        <category>blog</category>
      </categories>
      <tags>
        <tag>blog</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux使用Docker搭建PHP开发环境</title>
    <url>/centos-build-dnmp/</url>
    <content><![CDATA[<h1 id="一-Docker安装"><a href="#一-Docker安装" class="headerlink" title="一. Docker安装"></a>一. Docker安装</h1><a class="button  regular" href='/linux-insert-docker' title='Linux安装Docker'><i class='fa-solid fa-newspaper'></i> Linux安装Docker</a>

<h1 id="二-安装-docker-compose"><a href="#二-安装-docker-compose" class="headerlink" title="二. 安装 docker-compose"></a>二. 安装 <code>docker-compose</code></h1><h3 id="1-下载"><a href="#1-下载" class="headerlink" title="1. 下载"></a>1. 下载</h3><div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">sudo curl -L https://github.com/docker/compose/releases/download/1.16.1/docker-compose-`uname -s`-`uname -m` -o /usr/local/bin/docker-compose</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">慢的话可以用这个</span></span><br><span class="line">sudo curl -L https://get.daocloud.io/docker/compose/releases/download/1.25.1/docker-compose-`uname -s`-`uname -m` -o /usr/local/bin/docker-compose</span><br></pre></td></tr></table></figure></div>

<h3 id="2-设置权限"><a href="#2-设置权限" class="headerlink" title="2. 设置权限"></a>2. 设置权限</h3><div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">sudo chmod +x /usr/local/bin/docker-compose</span><br></pre></td></tr></table></figure></div>

<h3 id="3-验证"><a href="#3-验证" class="headerlink" title="3. 验证"></a>3. 验证</h3><div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">docker-compose --version</span><br></pre></td></tr></table></figure></div>

<h1 id="三-拉取dnmp环境配置"><a href="#三-拉取dnmp环境配置" class="headerlink" title="三. 拉取dnmp环境配置"></a>三. 拉取dnmp环境配置</h1><p>按需拉取 随便放在一个地方</p>
<div class="tabs" id="tab-代码克隆"><ul class="nav-tabs"><li class="tab active"><a class="#代码克隆-1">gitee</a></li><li class="tab"><a class="#代码克隆-2">github</a></li><li class="tab"><a class="#代码克隆-3">gitlab</a></li></ul><div class="tab-content"><div class="tab-pane active" id="代码克隆-1"><div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">git clone https://gitee.com/baoyuan0304/dnmp.git</span><br></pre></td></tr></table></figure></div></div><div class="tab-pane" id="代码克隆-2"><div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">git clone -b Linux https://github.com/BaoYuanY/dnmp.git</span><br></pre></td></tr></table></figure></div></div><div class="tab-pane" id="代码克隆-3"><div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">git clone -b Linux https://gitlab.yangbaoyuan.cn/BaoYuan/dnmp.git</span><br></pre></td></tr></table></figure></div></div></div></div>

<h1 id="四-配置"><a href="#四-配置" class="headerlink" title="四. 配置"></a>四. 配置</h1><div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">mkdir /www              #设置挂载目录</span><br><span class="line">cd /www            </span><br><span class="line">git clone ******        #克隆dnmp代码 </span><br><span class="line">vim .env                #编辑 .env</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">修改 SOURCE_DIR=/www</span>  </span><br></pre></td></tr></table></figure></div>
<p>在dnmp目录下执行</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">docker-compose up -d  #第一次会先build 时间稍微长一点</span><br></pre></td></tr></table></figure></div>


<p><b>然后配置自己的nginx的*****.conf文件</b></p>
]]></content>
      <categories>
        <category>Docker</category>
        <category>PHP</category>
      </categories>
      <tags>
        <tag>dnmp</tag>
      </tags>
  </entry>
  <entry>
    <title>CentOS有关SSH配置</title>
    <url>/centos-ssh-login/</url>
    <content><![CDATA[<h1 id="SSH的安装"><a href="#SSH的安装" class="headerlink" title="SSH的安装"></a>SSH的安装</h1><ol>
<li><p>首先，确保已在CentOS服务器上安装了openssh-server。通过运行以下命令检查是否已安装：</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">yum list installed | grep openssh-server</span><br></pre></td></tr></table></figure></div>
<p>如果未安装，请使用以下命令安装：</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">sudo yum install openssh-server</span><br></pre></td></tr></table></figure></div>
</li>
<li><p>启动SSH服务并设置为开机自启动：</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">sudo systemctl start sshd</span><br><span class="line">sudo systemctl enable sshd</span><br></pre></td></tr></table></figure></div>
</li>
<li><p>使用防火墙允许SSH连接。防火墙默认情况下会阻止SSH连接，因此需要通过以下命令打开SSH端口：</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">sudo firewall-cmd --permanent --zone=public --add-service=ssh</span><br><span class="line">sudo firewall-cmd --reload</span><br></pre></td></tr></table></figure></div>
<p>或者，如果要打开某个特定端口，如22，使用以下命令：</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">sudo firewall-cmd --permanent --zone=public --add-port=22/tcp</span><br><span class="line">sudo firewall-cmd --reload</span><br></pre></td></tr></table></figure></div>
</li>
<li><p>编辑SSH配置文件，以添加或修改配置。使用文本编辑器编辑<code>/etc/ssh/sshd_config</code>文件：</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">sudo vi /etc/ssh/sshd_config</span><br></pre></td></tr></table></figure></div>
<p>常见的配置选项包括：</p>
<ul>
<li>禁用ROOT登录：<code>PermitRootLogin no</code>。建议禁用Root登录，以增加安全性。</li>
<li>禁止密码登录：<code>PasswordAuthentication no</code>。</li>
<li>开始ssh登录：<code>PubkeyAuthentication yes</code>。</li>
<li>更改默认端口：将<code>Port</code>选项更改为所需端口（如<code>Port 2222</code>）。这可以帮助减少暴力攻击。</li>
<li>限制用户访问：例如，要仅允许用户alice和bob登录，需要添加<code>AllowUsers alice bob</code>。</li>
</ul>
<p>在编辑配置文件后，保存并关闭文件。</p>
</li>
<li><p>重启SSH服务，使更改生效：</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">sudo systemctl restart sshd</span><br></pre></td></tr></table></figure></div>
</li>
<li><p>配置客户端。要从客户端登录到SSH服务器，需要在客户端生成SSH密钥（公钥和私钥）。在客户端运行以下命令：</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">ssh-keygen</span><br></pre></td></tr></table></figure></div>
<p>按照提示操作，您将会创建一个新的密钥对。然后将公钥添加到CentOS服务器的<code>~/.ssh/authorized_keys</code>文件中：</p>
<p>如果是非root用户要设置文件夹或者文件权限</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">chmod 700 ~/.ssh</span><br><span class="line">chmod 600 ~/.ssh/authorized_keys</span><br></pre></td></tr></table></figure></div>
<p>登录</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">ssh-copy-id user@your_server_ip</span><br></pre></td></tr></table></figure></div>
<p>（将’user’和’your_server_ip’替换为实际的值）</p>
</li>
<li><p>现在您已经配置好SSH登录了。要登录到远程服务器，请从客户端运行以下命令：</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">ssh user@your_server_ip</span><br></pre></td></tr></table></figure></div>
<p>（将’user’和’your_server_ip’替换为实际的值）</p>
</li>
</ol>
<p>就这样，您已经配置并从客户端访问了新的CentOS服务器。保持登录安全！</p>
<h1 id="ssh空闲超时时间检测"><a href="#ssh空闲超时时间检测" class="headerlink" title="ssh空闲超时时间检测"></a>ssh空闲超时时间检测</h1><ol>
<li>使用文本编辑器（例如vi,nano,vim）编辑配置文件<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">vi /etc/ssh/sshd_config</span><br></pre></td></tr></table></figure></div></li>
<li>找到 <code>ClientAliveInterval</code> 设置为600到900之间</li>
<li>重启 SSH 服务以使更改生效<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">systemctl restart sshd</span><br></pre></td></tr></table></figure></div></li>
</ol>
<h1 id="使用加密的远程管理ssh"><a href="#使用加密的远程管理ssh" class="headerlink" title="使用加密的远程管理ssh"></a>使用加密的远程管理ssh</h1><p><b>未使用安全套接字（如SSH）加密远程管理服务器可能会导致以下危害：</b></p>
<ul>
<li>数据泄露：未加密的通信容易被截获和窃听。黑客可以捕获传输中的敏感数据，如用户名、密码、配置文件和其他重要信息。</li>
<li>中间人攻击：未加密的连接容易受到中间人攻击。攻击者可能会拦截通信，修改数据，然后将其传输到接收者，而双方可能都不知道通信已被篡改。</li>
<li>暴力破解攻击：当传输未加密的用户名和密码时，攻击者可以尝试破解这些凭据以访问服务器。如果它们使用了弱密码，攻击者可能很容易就能破解密码。</li>
<li>会话劫持：在未加密的连接中，攻击者可以劫持用户会话，然后使用已登录的凭据对服务器进行操作。</li>
<li>恶意软件和后门程序：攻击者可能会通过未加密的连接传播恶意软件或植入后门，以便在以后对服务器进行攻击。这可能会导致数据损坏、丢失或被盗。</li>
<li>泄露IP地址：未加密的连接也会泄露使用者的IP地址，这可能导致IP被跟踪，进一步增加黑客攻击发现的可能性。</li>
</ul>
<ol>
<li>在sshd_config中添加或设置 <code>Protocol 2</code> <div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">vi /etc/ssh/sshd_config</span><br></pre></td></tr></table></figure></div></li>
<li>重启 SSH 服务以使更改生效<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">systemctl restart sshd</span><br></pre></td></tr></table></figure></div></li>
</ol>
<h1 id="设置ssh登录白名单"><a href="#设置ssh登录白名单" class="headerlink" title="设置ssh登录白名单"></a>设置ssh登录白名单</h1><ol>
<li>在<code>/etc/hosts.deny</code>添加 <code>ALL:ALL</code></li>
<li>在<code>/etc/hosts.allow</code>添加 <code>sshd:192.168.1.1</code> <blockquote>
<p>192.168.1.1只是一个示例  需要根据自己情况去配置</p>
</blockquote>
</li>
</ol>
<h1 id="配置命令行超时退出"><a href="#配置命令行超时退出" class="headerlink" title="配置命令行超时退出"></a>配置命令行超时退出</h1><p><b>未配置命令行超时退出（也称为闲置超时）可能会带来以下隐患：</b></p>
<ul>
<li>未授权访问：如果有人在用户离开计算机时尝试访问已登录的SSH会话，他们可能会有权限执行高级任务或对系统进行更改。这特别适用于具有sudo权限的用户，因为他们能够执行危险的系统操作。</li>
<li>资源占用：对于运行多个SSH会话的用户，很容易忘记关闭其中的某个。这可能导致系统资源被长期占用，从而降低服务器的整体性能。</li>
<li>难以进行故障排查：如果没有超时设置，系统管理员在分析系统日志时可能发现很多未结束的SSH会话。这会使他们难以确定哪个SSH会话是可疑的或导致问题的，从而增加排查问题的难度。</li>
</ul>
<ol>
<li>在<code>/etc/profile</code>中添加<code>tmout=300</code><div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">vi /etc/profile</span><br></pre></td></tr></table></figure></div></li>
<li>使更改生效<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">source /etc/profile</span><br></pre></td></tr></table></figure></div></li>
</ol>
]]></content>
      <categories>
        <category>Linux</category>
        <category>CentOS</category>
      </categories>
      <tags>
        <tag>SSH</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a class="link"   href="https://hexo.io/" >Hexo <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>! This is your very first post. Check <a class="link"   href="https://hexo.io/docs/" >documentation <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> for more info. If you get any problems when using Hexo, you can find the answer in <a class="link"   href="https://hexo.io/docs/troubleshooting.html" >troubleshooting <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> or you can ask me on <a class="link"   href="https://github.com/hexojs/hexo/issues" >GitHub <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure></div>

<p>More info: <a class="link"   href="https://hexo.io/docs/writing.html" >Writing <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure></div>

<p>More info: <a class="link"   href="https://hexo.io/docs/server.html" >Server <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure></div>

<p>More info: <a class="link"   href="https://hexo.io/docs/generating.html" >Generating <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure></div>

<p>More info: <a class="link"   href="https://hexo.io/docs/one-command-deployment.html" >Deployment <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
]]></content>
  </entry>
  <entry>
    <title>Linux安装Docker</title>
    <url>/linux-insert-docker/</url>
    <content><![CDATA[<h2 id="安装额外的工具"><a href="#安装额外的工具" class="headerlink" title="安装额外的工具"></a>安装额外的工具</h2><div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">yum install -y yum-utils \</span><br><span class="line">           device-mapper-persistent-data \</span><br><span class="line">           lvm2 --skip-broken</span><br></pre></td></tr></table></figure></div>


<h2 id="一-如果之前安装过Docker，可以使用下面命令卸载"><a href="#一-如果之前安装过Docker，可以使用下面命令卸载" class="headerlink" title="一. 如果之前安装过Docker，可以使用下面命令卸载"></a>一. 如果之前安装过Docker，可以使用下面命令卸载</h2><div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">yum remove docker \</span><br><span class="line">                  docker-client \</span><br><span class="line">                  docker-client-latest \</span><br><span class="line">                  docker-common \</span><br><span class="line">                  docker-latest \</span><br><span class="line">                  docker-latest-logrotate \</span><br><span class="line">                  docker-logrotate \</span><br><span class="line">                  docker-selinux \</span><br><span class="line">                  docker-engine-selinux \</span><br><span class="line">                  docker-engine \</span><br><span class="line">                  docker-ce</span><br></pre></td></tr></table></figure></div>

<h2 id="二-设置Docker镜像源"><a href="#二-设置Docker镜像源" class="headerlink" title="二. 设置Docker镜像源"></a>二. 设置Docker镜像源</h2><div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">yum-config-manager \</span><br><span class="line">    --add-repo \</span><br><span class="line">    https://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo</span><br></pre></td></tr></table></figure></div>

<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">sed -i &#x27;s/download.docker.com/mirrors.aliyun.com\/docker-ce/g&#x27; /etc/yum.repos.d/docker-ce.repo</span><br></pre></td></tr></table></figure></div>

<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">yum makecache fast</span><br></pre></td></tr></table></figure></div>


<h2 id="三-安装"><a href="#三-安装" class="headerlink" title="三. 安装"></a>三. 安装</h2><div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">yum install -y docker-ce</span><br></pre></td></tr></table></figure></div>


<h2 id="四-启动、停止、重启docker命令"><a href="#四-启动、停止、重启docker命令" class="headerlink" title="四. 启动、停止、重启docker命令"></a>四. 启动、停止、重启docker命令</h2><div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">启动docker服务</span></span><br><span class="line">systemctl start docker  </span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">停止docker服务</span></span><br><span class="line">systemctl stop docker  </span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">重启docker服务</span></span><br><span class="line">systemctl restart docker  </span><br></pre></td></tr></table></figure></div>


<p>输入 <code>systemctl status docker</code> 查看docker启动状态 如下图</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/linux-insert-docker/docker-status.png"
                      alt="image"
                ></p>
<p>输入 <code>docker -v</code> 查看docker版本</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/linux-insert-docker/docker-version.png"
                      alt="image"
                ></p>
<h2 id="五-配置镜像加速"><a href="#五-配置镜像加速" class="headerlink" title="五. 配置镜像加速"></a>五. 配置镜像加速</h2><p>可以使用自己的阿里云账号配置(没有账号的话建议注册一下) 详情查看文档 &#x3D;&#x3D;&#x3D;&gt; <a herf="https://cr.console.aliyun.com/cn-hangzhou/instances/mirrors">容器镜像服务</a></p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/linux-insert-docker/docker-mirrors.png"
                      alt="image"
                ></p>
<h3 id="配置说明"><a href="#配置说明" class="headerlink" title="配置说明"></a>配置说明</h3><div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">sudo前缀针对非root用户且有sudo权限的用户 视情况加与不加</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">创建文件夹</span></span><br><span class="line">sudo mkdir -p /etc/docker</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">将配置写入文件</span></span><br><span class="line">sudo tee /etc/docker/daemon.json &lt;&lt;-&#x27;EOF&#x27;</span><br><span class="line">&#123;</span><br><span class="line">  &quot;registry-mirrors&quot;: [&quot;https://7pvmk0yu.mirror.aliyuncs.com&quot;]</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">重新加载文件</span></span><br><span class="line">sudo systemctl daemon-reload</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">重启docker</span></span><br><span class="line">sudo systemctl restart docker</span><br></pre></td></tr></table></figure></div>

<h2 id="PS"><a href="#PS" class="headerlink" title="PS:"></a>PS:</h2><p>如果遇到一些问题 可以试着关闭防火墙后重试</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">关闭</span></span><br><span class="line">systemctl stop firewalld</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">禁止开机启动防火墙</span></span><br><span class="line">systemctl disable firewalld</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">查看是否关闭防火墙</span></span><br><span class="line">systemctl status firewalld</span><br></pre></td></tr></table></figure></div>






]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>docker</tag>
      </tags>
  </entry>
  <entry>
    <title>PHP一些函数方法汇总</title>
    <url>/php-function/</url>
    <content><![CDATA[<h1 id="数组多键排序"><a href="#数组多键排序" class="headerlink" title="数组多键排序"></a>数组多键排序</h1><div class="highlight-container" data-rel="Php"><figure class="iseeu highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">use</span> <span class="title">Illuminate</span>\<span class="title">Support</span>\<span class="title">Collection</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable">$tempArr</span> = [</span><br><span class="line">    [</span><br><span class="line">        <span class="string">&#x27;name&#x27;</span>    =&gt; <span class="string">&#x27;小红&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;chinese&#x27;</span> =&gt; <span class="string">&#x27;99&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;math&#x27;</span>    =&gt; <span class="string">&#x27;91&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;english&#x27;</span> =&gt; <span class="string">&#x27;87&#x27;</span>,</span><br><span class="line">    ], [</span><br><span class="line">        <span class="string">&#x27;name&#x27;</span>    =&gt; <span class="string">&#x27;小华&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;chinese&#x27;</span> =&gt; <span class="string">&#x27;93&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;math&#x27;</span>    =&gt; <span class="string">&#x27;94&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;english&#x27;</span> =&gt; <span class="string">&#x27;89&#x27;</span>,</span><br><span class="line">    ], [</span><br><span class="line">        <span class="string">&#x27;name&#x27;</span>    =&gt; <span class="string">&#x27;小明&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;chinese&#x27;</span> =&gt; <span class="string">&#x27;93&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;math&#x27;</span>    =&gt; <span class="string">&#x27;91&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;english&#x27;</span> =&gt; <span class="string">&#x27;98&#x27;</span>,</span><br><span class="line">    ], [</span><br><span class="line">        <span class="string">&#x27;name&#x27;</span>    =&gt; <span class="string">&#x27;小丽&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;chinese&#x27;</span> =&gt; <span class="string">&#x27;93&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;math&#x27;</span>    =&gt; <span class="string">&#x27;94&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;english&#x27;</span> =&gt; <span class="string">&#x27;98&#x27;</span>,</span><br><span class="line">    ], [</span><br><span class="line">        <span class="string">&#x27;name&#x27;</span>    =&gt; <span class="string">&#x27;小强&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;chinese&#x27;</span> =&gt; <span class="string">&#x27;98&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;math&#x27;</span>    =&gt; <span class="string">&#x27;92&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;english&#x27;</span> =&gt; <span class="string">&#x27;87&#x27;</span>,</span><br><span class="line">    ]</span><br><span class="line">];</span><br><span class="line"></span><br><span class="line"><span class="comment">//方式1</span></span><br><span class="line"><span class="variable">$sorted</span> = <span class="title function_ invoke__">collect</span>(<span class="variable">$tempArr</span>)-&gt;<span class="title function_ invoke__">sortBy</span>(function (<span class="variable">$item</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_ invoke__">sprintf</span>(<span class="string">&#x27;%d-%s-%s&#x27;</span>, <span class="variable">$item</span>[<span class="string">&#x27;chinese&#x27;</span>], <span class="variable">$item</span>[<span class="string">&#x27;math&#x27;</span>], <span class="variable">$item</span>[<span class="string">&#x27;english&#x27;</span>]);</span><br><span class="line">&#125;, SORT_REGULAR, <span class="literal">true</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable">$sorted</span>-&gt;<span class="title function_ invoke__">each</span>(function (<span class="variable">$item</span>) &#123;</span><br><span class="line">    <span class="title function_ invoke__">dump</span>(<span class="variable">$item</span>[<span class="string">&#x27;name&#x27;</span>]);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">//方式2</span></span><br><span class="line"><span class="title function_ invoke__">collect</span>(<span class="variable">$tempArr</span>)-&gt;<span class="title function_ invoke__">sort</span>(function (<span class="variable">$a</span>, <span class="variable">$b</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$a</span>[<span class="string">&#x27;chinese&#x27;</span>] != <span class="variable">$b</span>[<span class="string">&#x27;chinese&#x27;</span>]) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$b</span>[<span class="string">&#x27;chinese&#x27;</span>] &lt;=&gt; <span class="variable">$a</span>[<span class="string">&#x27;chinese&#x27;</span>];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$a</span>[<span class="string">&#x27;math&#x27;</span>] != <span class="variable">$b</span>[<span class="string">&#x27;math&#x27;</span>]) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$b</span>[<span class="string">&#x27;math&#x27;</span>] &lt;=&gt; <span class="variable">$a</span>[<span class="string">&#x27;math&#x27;</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$b</span>[<span class="string">&#x27;english&#x27;</span>] &lt;=&gt; <span class="variable">$a</span>[<span class="string">&#x27;english&#x27;</span>];</span><br><span class="line">&#125;)-&gt;<span class="title function_ invoke__">each</span>(function (<span class="variable">$item</span>) &#123;</span><br><span class="line">    <span class="title function_ invoke__">dump</span>(<span class="variable">$item</span>[<span class="string">&#x27;name&#x27;</span>]);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br></pre></td></tr></table></figure></div>

<h2 id="代码解释"><a href="#代码解释" class="headerlink" title="代码解释"></a>代码解释</h2><h3 id="方式1"><a href="#方式1" class="headerlink" title="方式1"></a>方式1</h3><ol>
<li>定义一个 $tempArr 数组，包含了 5 名学生的姓名（name）、语文成绩（chinese）、数学成绩（math）以及英语成绩（english）。</li>
<li>使用 Laravel 的 <code>collect()</code> 函数把 <code>$tempArr</code> 数组转换成一个集合（Collection）对象，然后调用 <code>sortBy()</code>方法对集合中的元素进行排序。<code>sortBy()</code> 方法需要一个回调函数作为参数，这个回调函数决定了排序的规则。</li>
<li>在回调函数内部，使用 sprintf() 函数为每个学生生成一个字符串，格式为：<code>chinese-math-english</code>。这个字符串将作为排序的依据。</li>
<li><code>sortBy()</code> 方法还有两个额外的参数：排序依据类型（<code>SORT_REGULAR</code>）和排序方向（<code>true</code>）。这里设置为 <code>SORT_REGULAR</code> 说明按照正常比较的方式（即数字按大小，字符串按字典序）进行排序，<code>true</code> 表示降序排序（从大到小）。</li>
<li>排序完成后，使用 <code>each()</code> 方法依次迭代集合中的元素。<code>each()</code> 方法接受一个回调函数作为参数，在此回调函数内部，可以访问到当前元素以及元素的索引（键值）。</li>
</ol>
<h3 id="方式2"><a href="#方式2" class="headerlink" title="方式2"></a>方式2</h3><ol>
<li>首先比较两个元素的<code>chinese</code>。如果它们不相等，则用合并比较运算符<code>&lt;=&gt;</code>比较它们，并返回结果。注意：<code>$b[&#39;chinese&#39;] &lt;=&gt; $a[&#39;chinese&#39;]</code> 这种写法是为了降序排列。因此，成绩较高的元素会排在较低的元素之前。</li>
<li>如果<code>chinese</code>相等，比较函数会继续比较两个元素的<code>math</code>。如果它们不相等，同样使用合并比较运算符<code>&lt;=&gt;</code>进行比较，并返回结果。这里同样是降序排列。</li>
<li>如果<code>math</code>也相等，最后比较<code>english</code>。与前两次比较一样，使用合并比较运算符<code>&lt;=&gt;</code>进行降序排序。</li>
</ol>
]]></content>
      <categories>
        <category>PHP</category>
      </categories>
      <tags>
        <tag>PHP</tag>
      </tags>
  </entry>
  <entry>
    <title>PHP坐标转换类</title>
    <url>/php_coordinate/</url>
    <content><![CDATA[   <div class="highlight-container" data-rel="Php"><figure class="iseeu highlight php"><table><tr><td class="code"><pre><span class="line">   <span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title class_">App</span>\<span class="title class_">Service</span>\<span class="title class_">Common</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CoordinateService</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">const</span> <span class="variable constant_">x_PI</span> = <span class="number">52.35987755982988</span>;</span><br><span class="line">    <span class="keyword">const</span> <span class="variable constant_">PI</span>   = <span class="number">3.1415926535897932384626</span>;</span><br><span class="line">    <span class="keyword">const</span> <span class="variable constant_">a</span>    = <span class="number">6378245.0</span>;</span><br><span class="line">    <span class="keyword">const</span> <span class="variable constant_">ee</span>   = <span class="number">0.00669342162296594323</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//高德地图用的就是火星坐标系(GCJ-02)</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 百度坐标系(BD-09) 转 火星坐标系(GCJ-02)</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> $bd_lon</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> $bd_lat</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> float[]</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">bd09ToGcj02</span>(<span class="params"><span class="variable">$bd_lon</span>, <span class="variable">$bd_lat</span></span>): <span class="title">array</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$x</span>     = <span class="variable">$bd_lon</span> - <span class="number">0.0065</span>;</span><br><span class="line">        <span class="variable">$y</span>     = <span class="variable">$bd_lat</span> - <span class="number">0.006</span>;</span><br><span class="line">        <span class="variable">$z</span>     = <span class="title function_ invoke__">sqrt</span>(<span class="variable">$x</span> * <span class="variable">$x</span> + <span class="variable">$y</span> * <span class="variable">$y</span>) - <span class="number">0.00002</span> * <span class="title function_ invoke__">sin</span>(<span class="variable">$y</span> * <span class="built_in">self</span>::<span class="variable constant_">x_PI</span>);</span><br><span class="line">        <span class="variable">$theta</span> = <span class="title function_ invoke__">atan2</span>(<span class="variable">$y</span>, <span class="variable">$x</span>) - <span class="number">0.000003</span> * <span class="title function_ invoke__">cos</span>(<span class="variable">$x</span> * <span class="built_in">self</span>::<span class="variable constant_">x_PI</span>);</span><br><span class="line">        <span class="variable">$g_lon</span> = <span class="variable">$z</span> * <span class="title function_ invoke__">cos</span>(<span class="variable">$theta</span>);</span><br><span class="line">        <span class="variable">$g_lat</span> = <span class="variable">$z</span> * <span class="title function_ invoke__">sin</span>(<span class="variable">$theta</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">array</span>(<span class="string">&#x27;lon&#x27;</span> =&gt; <span class="variable">$g_lon</span>, <span class="string">&#x27;lat&#x27;</span> =&gt; <span class="variable">$g_lat</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 火星坐标系(GCJ-02) 转 百度坐标系(BD-09)</span></span><br><span class="line"><span class="comment">     * 即谷歌、高德 转 百度</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> $g_lon</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> $g_lat</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> float[]</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">gcj02Tobd09</span>(<span class="params"><span class="variable">$g_lon</span>, <span class="variable">$g_lat</span></span>): <span class="title">array</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$z</span>      = <span class="title function_ invoke__">sqrt</span>(<span class="variable">$g_lon</span> * <span class="variable">$g_lon</span> + <span class="variable">$g_lat</span> * <span class="variable">$g_lat</span>) + <span class="number">0.00002</span> * <span class="title function_ invoke__">sin</span>(<span class="variable">$g_lat</span> * <span class="built_in">self</span>::<span class="variable constant_">x_PI</span>);</span><br><span class="line">        <span class="variable">$theta</span>  = <span class="title function_ invoke__">atan2</span>(<span class="variable">$g_lat</span>, <span class="variable">$g_lon</span>) + <span class="number">0.000003</span> * <span class="title function_ invoke__">cos</span>(<span class="variable">$g_lon</span> * <span class="built_in">self</span>::<span class="variable constant_">x_PI</span>);</span><br><span class="line">        <span class="variable">$bd_lon</span> = <span class="variable">$z</span> * <span class="title function_ invoke__">cos</span>(<span class="variable">$theta</span>) + <span class="number">0.0065</span>;</span><br><span class="line">        <span class="variable">$bd_lat</span> = <span class="variable">$z</span> * <span class="title function_ invoke__">sin</span>(<span class="variable">$theta</span>) + <span class="number">0.006</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">array</span>(<span class="string">&#x27;lon&#x27;</span> =&gt; <span class="variable">$bd_lon</span>, <span class="string">&#x27;lat&#x27;</span> =&gt; <span class="variable">$bd_lat</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * WGS84 转 GCj02</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> $w_lon</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> $w_lat</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> float[]</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">wgs84ToGcj02</span>(<span class="params"><span class="variable">$w_lon</span>, <span class="variable">$w_lat</span></span>): <span class="title">array</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$dlat</span>      = <span class="built_in">self</span>::<span class="title function_ invoke__">transFormLat</span>(<span class="variable">$w_lon</span> - <span class="number">105.0</span>, <span class="variable">$w_lat</span> - <span class="number">35.0</span>);</span><br><span class="line">        <span class="variable">$dlon</span>      = <span class="built_in">self</span>::<span class="title function_ invoke__">transFormLon</span>(<span class="variable">$w_lon</span> - <span class="number">105.0</span>, <span class="variable">$w_lat</span> - <span class="number">35.0</span>);</span><br><span class="line">        <span class="variable">$radlat</span>    = <span class="variable">$w_lat</span> / <span class="number">180.0</span> * <span class="built_in">self</span>::<span class="variable constant_">PI</span>;</span><br><span class="line">        <span class="variable">$magic</span>     = <span class="title function_ invoke__">sin</span>(<span class="variable">$radlat</span>);</span><br><span class="line">        <span class="variable">$magic</span>     = <span class="number">1</span> - <span class="built_in">self</span>::<span class="variable constant_">ee</span> * <span class="variable">$magic</span> * <span class="variable">$magic</span>;</span><br><span class="line">        <span class="variable">$sqrtmagic</span> = <span class="title function_ invoke__">sqrt</span>(<span class="variable">$magic</span>);</span><br><span class="line">        <span class="variable">$dlat</span>      = (<span class="variable">$dlat</span> * <span class="number">180.0</span>) / ((<span class="built_in">self</span>::<span class="variable constant_">a</span> * (<span class="number">1</span> - <span class="built_in">self</span>::<span class="variable constant_">ee</span>)) / (<span class="variable">$magic</span> * <span class="variable">$sqrtmagic</span>) * <span class="built_in">self</span>::<span class="variable constant_">PI</span>);</span><br><span class="line">        <span class="variable">$dlon</span>      = (<span class="variable">$dlon</span> * <span class="number">180.0</span>) / (<span class="built_in">self</span>::<span class="variable constant_">a</span> / <span class="variable">$sqrtmagic</span> * <span class="title function_ invoke__">cos</span>(<span class="variable">$radlat</span>) * <span class="built_in">self</span>::<span class="variable constant_">PI</span>);</span><br><span class="line">        <span class="variable">$g_lat</span>     = <span class="variable">$w_lat</span> + <span class="variable">$dlat</span>;</span><br><span class="line">        <span class="variable">$g_lon</span>     = <span class="variable">$w_lon</span> + <span class="variable">$dlon</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">array</span>(<span class="string">&#x27;lon&#x27;</span> =&gt; <span class="variable">$g_lon</span>, <span class="string">&#x27;lat&#x27;</span> =&gt; <span class="variable">$g_lat</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * GCJ02 转换为 WGS84</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> $g_lon</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> $g_lat</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> float[]</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">gcj02ToWgs84</span>(<span class="params"><span class="variable">$g_lon</span>, <span class="variable">$g_lat</span></span>): <span class="title">array</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$dlat</span>      = <span class="built_in">self</span>::<span class="title function_ invoke__">transFormLat</span>(<span class="variable">$g_lon</span> - <span class="number">105.0</span>, <span class="variable">$g_lat</span> - <span class="number">35.0</span>);</span><br><span class="line">        <span class="variable">$dlon</span>      = <span class="built_in">self</span>::<span class="title function_ invoke__">transFormLon</span>(<span class="variable">$g_lon</span> - <span class="number">105.0</span>, <span class="variable">$g_lat</span> - <span class="number">35.0</span>);</span><br><span class="line">        <span class="variable">$radlat</span>    = <span class="variable">$g_lat</span> / <span class="number">180.0</span> * <span class="built_in">self</span>::<span class="variable constant_">PI</span>;</span><br><span class="line">        <span class="variable">$magic</span>     = <span class="title function_ invoke__">sin</span>(<span class="variable">$radlat</span>);</span><br><span class="line">        <span class="variable">$magic</span>     = <span class="number">1</span> - <span class="built_in">self</span>::<span class="variable constant_">ee</span> * <span class="variable">$magic</span> * <span class="variable">$magic</span>;</span><br><span class="line">        <span class="variable">$sqrtmagic</span> = <span class="title function_ invoke__">sqrt</span>(<span class="variable">$magic</span>);</span><br><span class="line">        <span class="variable">$dlat</span>      = (<span class="variable">$dlat</span> * <span class="number">180.0</span>) / ((<span class="built_in">self</span>::<span class="variable constant_">a</span> * (<span class="number">1</span> - <span class="built_in">self</span>::<span class="variable constant_">ee</span>)) / (<span class="variable">$magic</span> * <span class="variable">$sqrtmagic</span>) * <span class="built_in">self</span>::<span class="variable constant_">PI</span>);</span><br><span class="line">        <span class="variable">$dlon</span>      = (<span class="variable">$dlon</span> * <span class="number">180.0</span>) / (<span class="built_in">self</span>::<span class="variable constant_">a</span> / <span class="variable">$sqrtmagic</span> * <span class="title function_ invoke__">cos</span>(<span class="variable">$radlat</span>) * <span class="built_in">self</span>::<span class="variable constant_">PI</span>);</span><br><span class="line">        <span class="variable">$w_lat</span>     = <span class="variable">$g_lat</span> + <span class="variable">$dlat</span>;</span><br><span class="line">        <span class="variable">$w_lon</span>     = <span class="variable">$g_lon</span> + <span class="variable">$dlon</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">array</span>(<span class="string">&#x27;lon&#x27;</span> =&gt; <span class="variable">$w_lon</span>, <span class="string">&#x27;lat&#x27;</span> =&gt; <span class="variable">$w_lat</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * BD09 转换为 WGS84</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> $bd_lon</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> $bd_lat</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> float[]</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">bd09ToWgs84</span>(<span class="params"><span class="variable">$bd_lon</span>, <span class="variable">$bd_lat</span></span>): <span class="title">array</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$gcj02</span> = <span class="built_in">self</span>::<span class="title function_ invoke__">bd09ToGcj02</span>(<span class="variable">$bd_lon</span>, <span class="variable">$bd_lat</span>);</span><br><span class="line">        <span class="variable">$g_lon</span> = <span class="variable">$gcj02</span>[<span class="string">&#x27;lon&#x27;</span>];</span><br><span class="line">        <span class="variable">$g_lat</span> = <span class="variable">$gcj02</span>[<span class="string">&#x27;lat&#x27;</span>];</span><br><span class="line">        <span class="variable">$wgs84</span> = <span class="built_in">self</span>::<span class="title function_ invoke__">gcj02ToWgs84</span>(<span class="variable">$g_lon</span>, <span class="variable">$g_lat</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$wgs84</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * WGS84 转换为 BD09</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> $w_lon</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> $w_lat</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> float[]</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">wgs84ToBd09</span>(<span class="params"><span class="variable">$w_lon</span>, <span class="variable">$w_lat</span></span>): <span class="title">array</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$gcj02</span> = <span class="built_in">self</span>::<span class="title function_ invoke__">wgs84ToGcj02</span>(<span class="variable">$w_lon</span>, <span class="variable">$w_lat</span>);</span><br><span class="line">        <span class="variable">$g_lon</span> = <span class="variable">$gcj02</span>[<span class="string">&#x27;lon&#x27;</span>];</span><br><span class="line">        <span class="variable">$g_lat</span> = <span class="variable">$gcj02</span>[<span class="string">&#x27;lat&#x27;</span>];</span><br><span class="line">        <span class="variable">$bd09</span>  = <span class="built_in">self</span>::<span class="title function_ invoke__">gcj02Tobd09</span>(<span class="variable">$g_lon</span>, <span class="variable">$g_lat</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$bd09</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 转换纬度</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> $lon</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> $lat</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> float</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">transFormLat</span>(<span class="params"><span class="variable">$lon</span>, <span class="variable">$lat</span></span>): <span class="title">float</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$ret</span> = -<span class="number">100.0</span> + <span class="number">2.0</span> * <span class="variable">$lon</span> + <span class="number">3.0</span> * <span class="variable">$lat</span> + <span class="number">0.2</span> * <span class="variable">$lat</span> * <span class="variable">$lat</span> + <span class="number">0.1</span> * <span class="variable">$lon</span> * <span class="variable">$lat</span> + <span class="number">0.2</span> * <span class="title function_ invoke__">sqrt</span>(<span class="title function_ invoke__">abs</span>(<span class="variable">$lon</span>));</span><br><span class="line">        <span class="variable">$ret</span> += (<span class="number">20.0</span> * <span class="title function_ invoke__">sin</span>(<span class="number">6.0</span> * <span class="variable">$lon</span> * <span class="built_in">self</span>::<span class="variable constant_">PI</span>) + <span class="number">20.0</span> * <span class="title function_ invoke__">sin</span>(<span class="number">2.0</span> * <span class="variable">$lon</span> * <span class="built_in">self</span>::<span class="variable constant_">PI</span>)) * <span class="number">2.0</span> / <span class="number">3.0</span>;</span><br><span class="line">        <span class="variable">$ret</span> += (<span class="number">20.0</span> * <span class="title function_ invoke__">sin</span>(<span class="variable">$lat</span> * <span class="built_in">self</span>::<span class="variable constant_">PI</span>) + <span class="number">40.0</span> * <span class="title function_ invoke__">sin</span>(<span class="variable">$lat</span> / <span class="number">3.0</span> * <span class="built_in">self</span>::<span class="variable constant_">PI</span>)) * <span class="number">2.0</span> / <span class="number">3.0</span>;</span><br><span class="line">        <span class="variable">$ret</span> += (<span class="number">160.0</span> * <span class="title function_ invoke__">sin</span>(<span class="variable">$lat</span> / <span class="number">12.0</span> * <span class="built_in">self</span>::<span class="variable constant_">PI</span>) + <span class="number">320</span> * <span class="title function_ invoke__">sin</span>(<span class="variable">$lat</span> * <span class="built_in">self</span>::<span class="variable constant_">PI</span> / <span class="number">30.0</span>)) * <span class="number">2.0</span> / <span class="number">3.0</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$ret</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 转换经度</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> $lon</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> $lat</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> float</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">transFormLon</span>(<span class="params"><span class="variable">$lon</span>, <span class="variable">$lat</span></span>): <span class="title">float</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$ret</span> = <span class="number">300.0</span> + <span class="variable">$lon</span> + <span class="number">2.0</span> * <span class="variable">$lat</span> + <span class="number">0.1</span> * <span class="variable">$lon</span> * <span class="variable">$lon</span> + <span class="number">0.1</span> * <span class="variable">$lon</span> * <span class="variable">$lat</span> + <span class="number">0.1</span> * <span class="title function_ invoke__">sqrt</span>(<span class="title function_ invoke__">abs</span>(<span class="variable">$lon</span>));</span><br><span class="line">        <span class="variable">$ret</span> += (<span class="number">20.0</span> * <span class="title function_ invoke__">sin</span>(<span class="number">6.0</span> * <span class="variable">$lon</span> * <span class="built_in">self</span>::<span class="variable constant_">PI</span>) + <span class="number">20.0</span> * <span class="title function_ invoke__">sin</span>(<span class="number">2.0</span> * <span class="variable">$lon</span> * <span class="built_in">self</span>::<span class="variable constant_">PI</span>)) * <span class="number">2.0</span> / <span class="number">3.0</span>;</span><br><span class="line">        <span class="variable">$ret</span> += (<span class="number">20.0</span> * <span class="title function_ invoke__">sin</span>(<span class="variable">$lon</span> * <span class="built_in">self</span>::<span class="variable constant_">PI</span>) + <span class="number">40.0</span> * <span class="title function_ invoke__">sin</span>(<span class="variable">$lon</span> / <span class="number">3.0</span> * <span class="built_in">self</span>::<span class="variable constant_">PI</span>)) * <span class="number">2.0</span> / <span class="number">3.0</span>;</span><br><span class="line">        <span class="variable">$ret</span> += (<span class="number">150.0</span> * <span class="title function_ invoke__">sin</span>(<span class="variable">$lon</span> / <span class="number">12.0</span> * <span class="built_in">self</span>::<span class="variable constant_">PI</span>) + <span class="number">300.0</span> * <span class="title function_ invoke__">sin</span>(<span class="variable">$lon</span> / <span class="number">30.0</span> * <span class="built_in">self</span>::<span class="variable constant_">PI</span>)) * <span class="number">2.0</span> / <span class="number">3.0</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$ret</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></div>






]]></content>
      <categories>
        <category>PHP</category>
      </categories>
      <tags>
        <tag>PHP</tag>
      </tags>
  </entry>
</search>
